install.packages(c("backports", "boot", "digest", "ellipsis", "foreign", "KernSmooth", "Matrix", "mgcv", "nlme", "pkgconfig", "R6", "Rcpp", "rlang", "scales", "survival"))
tps=seq(700,1200,100)
tps
aborts=c(15,18,19,25,30,33)
library(ggplot2)
data=rbind(tps,aborts)
data
p <- ggplot(data = data)
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_point()
data=data.frame(tps,aborts)
data
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_point()
p
tps=seq(700,1200,100)
aborts=c(7.76,18,19,25,30,22.12)
data=data.frame(tps,aborts)
data
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_point()
p
tps=seq(700,1200,100)
aborts=c(7.76,9.84,19,25,30,22.12)
data=data.frame(tps,aborts)
data
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_point()
p
tps=seq(700,1200,100)
aborts=c(7.76,9.84,12.46,25,30,22.12)
data=data.frame(tps,aborts)
data
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_point()
p
tps=seq(700,1200,100)
aborts=c(7.76,9.84,12.46,15.56,30,22.12)
data=data.frame(tps,aborts)
data
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_point()
p
tps=seq(700,1200,100)
aborts=c(7.76,9.84,12.46,15.56,18.04,22.12)
data=data.frame(tps,aborts)
data
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_point()
p
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_line() +
geom_point()
p
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_line() +
geom_point() +
ylim(0, 25)
p
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_line() +
geom_point() +
ylim(0, 25) + xlab("Transactions/s") + ylab("Abort/s")
p
p <- ggplot(data = data,aes(x=tps, y=aborts)) +
geom_line() +
geom_point() +
ylim(0, 25) + xlab("transactions/s") + ylab("abort/s")
p
n = matrix(10,10)
n
n = matrix(nrow = 10, ncol = 10)
n
## load function
source(file = no_isolation_func.R)
getwd()
setwd("~/Documents/papoc")
## clear environment
remove(list=ls())
## load function
source(file = func_no_isolation.R)
## load function
source(file = "func_no_isolation.R")
getwd()
setwd("~/Documents/papoc/approximations")
## load function
source(file = "func_no_isolation.R")
## load function
source(file = "func_no_isolation.R")
U = rep(0,length(lam))
## arrival rate
lam = c(100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000)
## clear environment
remove(list=ls())
## load function
source(file = "func_no_isolation.R")
## arrival rate
lam = c(100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000)
## time until corruption
U = rep(0,length(lam))
for (i in 1:length(lam)) {
start_time = Sys.time()
U[i] = no_isolation(
N=c(10^4,10^5,10^6,10^7,10^8),
p=c(0.5,0.26,0.13,0.07,0.04),
f=0.3,
r=0.07,
lam=lam[i],
gam=0.00001,
eps=0.1)
end_time = Sys.time()
duration = end_time - start_time
write(paste0(duration),file="no_isolation.log",append=TRUE)
}
for (i in 1:length(lam)) {
start_time = Sys.time()
U[i] = no_isolation(
N=c(10^4,10^5,10^6,10^7,10^8),
p=c(0.5,0.26,0.13,0.07,0.04),
f=0.3,
r=0.07,
lam=lam[i],
gam=0.00001)
end_time = Sys.time()
duration = end_time - start_time
write(paste0(duration),file="no_isolation.log",append=TRUE)
}
for (i in 1:length(lam)) {
start_time = Sys.time()
U[i] = no_isolation(
N=c(10^4,10^5,10^6,10^7,10^8),
p=c(0.5,0.26,0.13,0.07,0.04),
f=0.3,
r=0.07,
lam=lam[i],
gam=0.00001)
end_time = Sys.time()
duration = end_time - start_time
write(paste0(lam[i]," ",duration),file="no_isolation.log",append=TRUE)
}
## load function
source(file = "func_no_isolation.R")
## arrival rate
lam = c(100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000)
## time until corruption
U = rep(0,length(lam))
write("lam U",file="no_isolation.log",append=TRUE)
for (i in 1:length(lam)) {
start_time = Sys.time()
U[i] = no_isolation(
N=c(10^4,10^5,10^6,10^7,10^8),
p=c(0.5,0.26,0.13,0.07,0.04),
f=0.3,
r=0.07,
lam=lam[i],
gam=0.00001)
end_time = Sys.time()
duration = end_time - start_time
write(paste0(lam[i]," ",duration),file="no_isolation.log",append=TRUE)
}
results = cbind(lam,U)
write("lam  U",file="no_isolation.log",append=TRUE)
for (i in 1:length(lam)) {
start_time = Sys.time()
U[i] = no_isolation(
N=c(10^4,10^5,10^6,10^7,10^8),
p=c(0.5,0.26,0.13,0.07,0.04),
f=0.3,
r=0.07,
lam=lam[i],
gam=0.00001)
end_time = Sys.time()
duration = end_time - start_time
write(paste0(lam[i]," ",duration),file="no_isolation.log",append=TRUE)
}
results = cbind(lam,U)
## clear environment
remove(list=ls())
## load function
source(file = "func_no_isolation.R")
## arrival rate
lam = c(100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000)
## time until corruption
U = rep(0,length(lam))
write("lam U",file="../log/no_isolation.log",append=TRUE)
for (i in 1:length(lam)) {
start_time = Sys.time()
U[i] = no_isolation(
N=c(10^4,10^5,10^6,10^7,10^8),
p=c(0.5,0.26,0.13,0.07,0.04),
f=0.3,
r=0.07,
lam=lam[i],
gam=0.00001)
end_time = Sys.time()
duration = end_time - start_time
write(paste0(lam[i]," ",duration),file="no_isolation.log",append=TRUE)
}
results = cbind(lam,U)
write.csv(results,'../results/no_isolation.csv')
## load function
source(file = "func_no_isolation.R")
## arrival rate
lam = c(100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000)
## time until corruption
U = rep(0,length(lam))
write("lam U",file="../log/no_isolation.log",append=TRUE)
for (i in 1:length(lam)) {
start_time = Sys.time()
U[i] = no_isolation(
N=c(10^4,10^5,10^6,10^7,10^8),
p=c(0.5,0.26,0.13,0.07,0.04),
f=0.3,
r=0.07,
lam=lam[i],
gam=0.00001)
end_time = Sys.time()
duration = end_time - start_time
write(paste0(lam[i]," ",duration),file="../log/no_isolation.log",append=TRUE)
}
results = cbind(lam,U)
write.csv(results,'../results/no_isolation.csv', row.names=FALSE)
calc_d(eps=0.1,del=200)
## load function
source(file = "./approximations/func_probabilistic.R")
source(file = "func_probabilistic.R")
View(probabilistic)
